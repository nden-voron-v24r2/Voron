## Voron Design VORON2 250/300/350mm BigTreeTech OctoPus V1 TMC2209 UART config

[include mainsail.cfg]
[include other/stealthburner_leds.cfg]
[include other/nevermore.cfg]
[include other/timelapse.cfg]
[include other/lcd_tweaks.cfg]
[include other/purge.cfg]
[include other/skirt_fan.cfg]
[include other/led_effects_caselight.cfg]
[include KAMP_Settings.cfg]
[include other/btt_sfs_v2.cfg]
[firmware_retraction]
[exclude_object]

[mcu]
canbus_uuid: 4bf36eac87e5

[mcu EBBCan]
canbus_uuid: e8c320837692

[temperature_sensor EBB_NTC]
sensor_type: Generic 3950
sensor_pin: EBBCan: PA2

[adxl345]
cs_pin: EBBCan: PB12
spi_software_sclk_pin: EBBCan: PB10
spi_software_mosi_pin: EBBCan: PB11
spi_software_miso_pin: EBBCan: PB2
axes_map: z,-y,x

[resonance_tester]
probe_points: 150, 150, 20
accel_chip: adxl345


[printer]
kinematics: corexy
max_velocity: 300  
max_accel: 3000             #Max 4000
max_z_velocity: 15          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0

#####################################################################
#   X/Y Stepper Settings
#####################################################################

##  B Stepper - Left
##  Connected to MOTOR_0
[stepper_x]
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14
rotation_distance: 40
microsteps: 16
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: EBBCan: PB6
position_min: 0
position_endstop: 300
position_max: 300
homing_speed: 25   #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_x]
uart_pin: PC4
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  A Stepper - Right
##  Connected to MOTOR_1
[stepper_y]
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: PG9
position_min: 0
position_endstop: 300
position_max: 300
homing_speed: 25  #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_y]
uart_pin: PD11
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0
 
#####################################################################
#   Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left
##  Connected to MOTOR_2
##  Endstop connected to DIAG_2
[stepper_z]
step_pin: PF11
dir_pin: PG3
enable_pin: !PG5
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32
endstop_pin: probe:z_virtual_endstop
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##  Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
#position_endstop: -0.5
position_max: 290
position_min: -10
homing_speed: 8
second_homing_speed: 3
homing_retract_dist: 3

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: PC6
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z1 Stepper - Rear Left
##  Connected to MOTOR_3
[stepper_z1]
step_pin: PG4
dir_pin: !PC1
enable_pin: !PA0
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: PC7
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z2 Stepper - Rear Right
##  Connected to MOTOR_4
[stepper_z2]
step_pin: PF9
dir_pin: PF10
enable_pin: !PG2
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: PF2
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z3 Stepper - Front Right
##  Connected to MOTOR_5
[stepper_z3]
step_pin: PC13
dir_pin: !PF0
enable_pin: !PF1
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z3]
uart_pin: PE4
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

#####################################################################
#   Extruder
#####################################################################

##  Connected to MOTOR_6
##  Heater - HE0
##  Thermistor - T0
[extruder]
step_pin: EBBCan: PD0
dir_pin: EBBCan: PD1
enable_pin: !EBBCan: PD2
microsteps: 16
rotation_distance: 22.6789
gear_ratio: 50:10
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: EBBCan: PB13
sensor_type: EPCOS 100K B57560G104F
sensor_pin: EBBCan: PA3
#control: pid
#pid_Kp: 21.527
#pid_Ki: 1.063
#pid_Kd: 108.982
min_temp: 0
max_temp: 250
sensor_type:MAX31865
sensor_pin: EBBCan: PA4
spi_bus: spi1
rtd_nominal_r: 100
rtd_reference_r: 430
max_extrude_cross_section: 5
## td_num_of_wires: 2

[tmc2240 extruder]
cs_pin: EBBCan: PA15
spi_software_sclk_pin: EBBCan: PB10
spi_software_mosi_pin: EBBCan: PB11
spi_software_miso_pin: EBBCan: PB2
driver_TPFD: 0
run_current: 0.650
stealthchop_threshold: 999999

#####################################################################
#   Bed Heater
#####################################################################

##  SSR Pin - HE1
##  Thermistor - TB
[heater_bed]
heater_pin: PA3
sensor_type: Generic 3950
sensor_pin: PF3
max_power: 0.6
min_temp: 0
max_temp: 115

#####################################################################
#   Voron Tap
#####################################################################

##  Voron Tap
##  This probe is not used for Z height, only Quad Gantry Leveling
[probe]

activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %} 

pin: EBBCan: PB5
x_offset: 0
y_offset: 0
#z_offset: 0
speed: 10.0
samples: 3
samples_result: median
sample_retract_dist: 3.0
samples_tolerance: 0.006
samples_tolerance_retries: 3

#####################################################################
#   Bed Mesh
#####################################################################

[bed_mesh]
speed: 300
horizontal_move_z: 10
mesh_min: 40, 40
mesh_max: 260,260
zero_reference_position: 150,150 #for use with stock z endstop
fade_start: 0.6
fade_end: 10.0
probe_count: 5,5 # Values should be odd, so one point is directly at bed center
algorithm: bicubic

#####################################################################
#   Fan Control
#####################################################################

##  Print Cooling Fan - FAN0
[fan]
pin: EBBCan:PA1
kick_start_time: 0.5
off_below: 0.10

##  Hotend Fan - FAN1
[heater_fan hotend_fan]
pin: EBBCan:PA0
heater: extruder
kick_start_time: 0.5
heater_temp: 50.0
fan_speed: 1.0

[temperature_fan chamber]
pin: PD14
max_power: 1
shutdown_speed: 0.0
kick_start_time: 5
cycle_time:0.01
off_below:0.1
sensor_type: Generic 3950
sensor_pin: PF4
min_temp: 0
max_temp: 70
target_temp: 50.0
control: watermark
gcode_id: C

[gcode_macro M141]
gcode:
    {% set s = params.S|default(0)|float %}
    SET_TEMPERATURE_FAN_TARGET temperature_fan="chamber" target={s}

##  Controller fan - FAN2
[controller_fan controller_fan]
pin: PD13
kick_start_time: 0.5
heater: heater_bed
fan_speed: 0.5

#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

[safe_z_home]
home_xy_position: 150,150
speed:100
z_hop:10

[quad_gantry_level]
gantry_corners:
  -60,-10
  360,370
points:
  50,50
  50,250
  250,250
  250,50
speed: 100
horizontal_move_z: 10
retries: 5
retry_tolerance: 0.0075
max_adjust: 10

########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<5V>

#####################################################################
#   Displays
#####################################################################

##  RepRapDiscount 128x64 Full Graphic Smart Controller
[display]
lcd_type: st7920
cs_pin: EXP1_4
sclk_pin: EXP1_5
sid_pin: EXP1_3
menu_timeout: 40
encoder_pins: ^EXP2_5, ^EXP2_3
click_pin: ^!EXP1_2

[output_pin beeper]
pin: EXP1_1

#####################################################################
#   Macros
#####################################################################
[gcode_macro PARK]
gcode:
    {% set th = printer.toolhead %}
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} Z30  

[gcode_macro G32]
gcode:
    SAVE_GCODE_STATE NAME=STATE_G32
    G90
    G28
    QUAD_GANTRY_LEVEL
    CLEAN_NOZZLE
    G28
    PARK
    RESTORE_GCODE_STATE NAME=STATE_G32
   
#####################################################################
#   - A better print_start macro for v2/trident
#   - Use PRINT_START for the slicer starting script 
#     please customise for your slicer of choice
#####################################################################

[gcode_macro PRINT_START]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(100)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
    
    STATUS_READY                            ; sets of macro led effect to ready
    BED_MESH_CLEAR
    
    STATUS_HOMING                           ; sets the macro led effect to homing
    G28                                     ; #1 Home all Axis
    
    STATUS_LEVELING                         
    QUAD_GANTRY_LEVEL                       ; #2 QGL
    
    STATUS_HEATING
    M140 S{BED_TEMP}                        ; #3 Heat bed using variable BED_TEMP from slicer
    M109 S150                               ; #4 Heat nozzle to 150c Probing Temp
    M190 S{BED_TEMP}                        ; Wait for bed to reach temperature

    STATUS_MESHING
    BED_MESH_CALIBRATE ADAPTIVE=1           ; #5 Bed Mesh

    G0 X20 Y20 Z50 S2000                    ; #6 Park the head wherever you want it to be for nozzle heating

    STATUS_HEATING
    M104 S{EXTRUDER_TEMP}                   ; #7 Heat nozzle using EXTRUDER_TEMP variable from slicer
    M109 S{EXTRUDER_TEMP}                   ; wait for extruder temp

    SET_FAN_SPEED FAN=Nevermore SPEED=0.3   ; #8 Nevermore fan speed

    STATUS_CLEANING
    CLEAN_NOZZLE                            ; clean nozzle
    
    LINE_PURGE                              ; Purge a line before printing.
    G90
    M117 Starting Print ......
    STATUS_BUSY
    

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END

    M400                                                      ; wait for buffer to clear
    G92 E0                                                    ; zero the extruder
    G1 E-5.0 F1800                                            ; retract filament
    
    TURN_OFF_HEATERS

    G90                                                        ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000                    ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                                       ; turn off fan
    
    BED_MESH_CLEAR

    UPDATE_DELAYED_GCODE ID=filter_off DURATION=180            ; Nevermore fan off in 180s

    # The purpose of the SAVE_GCODE_STATE/RESTORE_GCODE_STATE
    # command pair is to restore the printer's coordinate system
    # and speed settings since the commands above change them.
    # However, to prevent any accidental, unintentional toolhead
    # moves when restoring the state, explicitly set MOVE=0.
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END MOVE=0

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 37.573
#*# pid_ki = 1.354
#*# pid_kd = 260.663
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 34.967
#*# pid_ki = 3.238
#*# pid_kd = 94.411
#*#
#*# [probe]
#*# z_offset = -0.600
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.020000, 0.063750, 0.062500, 0.081250, 0.037500
#*# 	  0.026250, 0.053750, 0.056250, 0.066250, 0.036250
#*# 	  -0.020000, 0.026250, 0.000000, 0.052500, 0.005000
#*# 	  -0.035000, -0.006250, 0.020000, 0.003750, -0.008750
#*# 	  0.002500, 0.027500, 0.005000, -0.001250, 0.008750
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 40.0
#*# max_x = 260.0
#*# min_y = 40.0
#*# max_y = 260.0
